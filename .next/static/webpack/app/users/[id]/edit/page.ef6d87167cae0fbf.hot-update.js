"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/users/[id]/edit/page",{

/***/ "(app-pages-browser)/./src/services/userService.ts":
/*!*************************************!*\
  !*** ./src/services/userService.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changePassword: function() { return /* binding */ changePassword; },\n/* harmony export */   createUser: function() { return /* binding */ createUser; },\n/* harmony export */   deleteUser: function() { return /* binding */ deleteUser; },\n/* harmony export */   getUserById: function() { return /* binding */ getUserById; },\n/* harmony export */   getUsers: function() { return /* binding */ getUsers; },\n/* harmony export */   updateUser: function() { return /* binding */ updateUser; }\n/* harmony export */ });\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n/* harmony import */ var _services_authService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/services/authService */ \"(app-pages-browser)/./src/services/authService.ts\");\n\n\nconst getAuthHeaders = async ()=>{\n    let token = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"accessToken\");\n    if (!token) {\n        throw new Error(\"No access token available\");\n    }\n    return {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \".concat(token)\n    };\n};\nconst getAuthHeadersForFormData = async ()=>{\n    let token = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"accessToken\");\n    if (!token) {\n        throw new Error(\"No access token available\");\n    }\n    return {\n        \"Authorization\": \"Bearer \".concat(token)\n    };\n};\n// Helper function to make authenticated requests with token refresh\nconst makeAuthenticatedRequest = async function(url) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    try {\n        const headers = await getAuthHeaders();\n        const response = await fetch(url, {\n            ...options,\n            headers: {\n                ...headers,\n                ...options.headers\n            }\n        });\n        if (response.status === 401) {\n            // Token expired, try to refresh\n            await (0,_services_authService__WEBPACK_IMPORTED_MODULE_1__.refreshToken)();\n            const newHeaders = await getAuthHeaders();\n            const retryResponse = await fetch(url, {\n                ...options,\n                headers: {\n                    ...newHeaders,\n                    ...options.headers\n                }\n            });\n            if (!retryResponse.ok) {\n                const errorData = await retryResponse.json();\n                throw new Error(errorData.message || \"Something went wrong\");\n            }\n            return retryResponse;\n        }\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.message || \"Something went wrong\");\n        }\n        return response;\n    } catch (error) {\n        console.error(\"Request failed:\", error);\n        throw error;\n    }\n};\nconst getUsers = async ()=>{\n    const response = await makeAuthenticatedRequest(\"https://api.nanspace.top/api/users\");\n    const data = await response.json();\n    // Transform image paths to full URLs\n    if (data.result && Array.isArray(data.result)) {\n        data.result = data.result.map((user)=>{\n            // The API returns paths like \"users/filename.jpg\", so we need to use /storage/\n            const imageUrl = user.image ? \"https://api.nanspace.top/storage/\".concat(user.image) : null;\n            return {\n                ...user,\n                image: imageUrl\n            };\n        });\n    }\n    return data;\n};\nconst createUser = async (data, file)=>{\n    if (file) {\n        // Use FormData for file upload\n        const formData = new FormData();\n        formData.append(\"name\", data.name);\n        formData.append(\"email\", data.email);\n        formData.append(\"password\", data.password);\n        if (file) {\n            formData.append(\"image\", file);\n        }\n        const headers = await getAuthHeadersForFormData();\n        const response = await fetch(\"https://api.nanspace.top/api/users\", {\n            method: \"POST\",\n            headers,\n            body: formData\n        });\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.message || \"Something went wrong\");\n        }\n        return response.json();\n    } else {\n        // Use JSON for text-only data\n        const response = await makeAuthenticatedRequest(\"https://api.nanspace.top/api/users\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n        return response.json();\n    }\n};\nconst getUserById = async (id)=>{\n    const response = await makeAuthenticatedRequest(\"https://api.nanspace.top/api/users/\".concat(id));\n    const data = await response.json();\n    // Return the user data in the expected format with proper image URL\n    if (data.result) {\n        // The API returns paths like \"users/filename.jpg\", so we need to use /storage/\n        const imageUrl = data.result.image ? \"https://api.nanspace.top/storage/\".concat(data.result.image) : \"\";\n        return {\n            ...data.result,\n            image: imageUrl\n        };\n    }\n    return data;\n};\nconst updateUser = async (id, data, file)=>{\n    if (file) {\n        // Use FormData for file upload\n        const formData = new FormData();\n        formData.append(\"name\", data.name);\n        formData.append(\"email\", data.email);\n        if (data.password) {\n            formData.append(\"password\", data.password);\n        }\n        if (file) {\n            formData.append(\"image\", file);\n        }\n        const headers = await getAuthHeadersForFormData();\n        const response = await fetch(\"https://api.nanspace.top/api/users/\".concat(id, \"/change-info\"), {\n            method: \"POST\",\n            headers,\n            body: formData\n        });\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.message || \"Something went wrong\");\n        }\n        return response.json();\n    } else {\n        // Use JSON for text-only data\n        const response = await makeAuthenticatedRequest(\"https://api.nanspace.top/api/users/\".concat(id, \"/change-info\"), {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n        return response.json();\n    }\n};\nconst changePassword = async (id, data)=>{\n    const response = await makeAuthenticatedRequest(\"https://api.nanspace.top/api/users/\".concat(id, \"/change-password\"), {\n        method: \"POST\",\n        body: JSON.stringify(data)\n    });\n    return response.json();\n};\nconst deleteUser = async (id)=>{\n    const response = await makeAuthenticatedRequest(\"https://api.nanspace.top/api/users/\".concat(id), {\n        method: \"DELETE\"\n    });\n    return response.json();\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/userService.ts\n"));

/***/ })

});